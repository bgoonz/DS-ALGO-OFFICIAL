{
  "title": "Delete a Node with One Child in a Binary Search Tree",
  "htmlDescription": "<section id=\"description\">\n<p>Now that we can delete leaf nodes let's move on to the second case: deleting a node with one child. For this case, say we have a tree with the following nodes 1 — 2 — 3 where 1 is the root. To delete 2, we simply need to make the right reference in 1 point to 3. More generally to delete a node with only one child, we make that node's parent reference the next node in the tree.</p>\n</section>",
  "boilerplate": "var displayTree = tree => console.log(JSON.stringify(tree, null, 2));\nfunction Node(value) {\n  this.value = value;\n  this.left = null;\n  this.right = null;\n}\n\nfunction BinarySearchTree() {\n  this.root = null;\n  this.remove = function(value) {\n    if (this.root === null) {\n      return null;\n    }\n    var target;\n    var parent = null;\n    // Find the target value and its parent\n    (function findValue(node = this.root) {\n      if (value == node.value) {\n        target = node;\n      } else if (value < node.value && node.left !== null) {\n        parent = node;\n        return findValue(node.left);\n      } else if (value < node.value && node.left === null) {\n        return null;\n      } else if (value > node.value && node.right !== null) {\n        parent = node;\n        return findValue(node.right);\n      } else {\n        return null;\n      }\n    }.bind(this)());\n    if (target === null) {\n      return null;\n    }\n    // Count the children of the target to delete\n    var children =\n      (target.left !== null ? 1 : 0) + (target.right !== null ? 1 : 0);\n    // Case 1: Target has no children\n    if (children === 0) {\n      if (target == this.root) {\n        this.root = null;\n      } else {\n        if (parent.left == target) {\n          parent.left = null;\n        } else {\n          parent.right = null;\n        }\n      }\n    }\n    // Case 2: Target has one child\n    // Only change code below this line\n  };\n}",
  "url": "https://www.freecodecamp.org/learn/coding-interview-prep/data-structures/delete-a-node-with-one-child-in-a-binary-search-tree"
}