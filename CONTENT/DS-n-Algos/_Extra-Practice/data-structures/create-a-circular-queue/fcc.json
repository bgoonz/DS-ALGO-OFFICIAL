{
  "title": "Create a Circular Queue",
  "htmlDescription": "<section id=\"description\">\n<p>In this challenge you will be creating a Circular Queue. A circular queue is a queue that writes to the end of a collection then begins overwriting itself at the beginning of the collection. This type of data structure is useful in certain situations. For example, a circular queue can be used for streaming media. Once the queue is full, new media data will overwrite old data.</p>\n<p>A good way to illustrate this concept is with an array of length <code>5</code>:</p>\n<pre><code class=\"language-js\">[null, null, null, null, null]\n ^Read @ 0\n ^Write @ 0\n</code></pre>\n<p>Here the read and write are both at position <code>0</code>. Now the queue gets 3 new records <code>a</code>, <code>b</code>, and <code>c</code>. Our queue now looks like:</p>\n<pre><code class=\"language-js\">[a, b, c, null, null]\n ^Read @ 0\n          ^Write @ 3\n</code></pre>\n<p>As the read head reads, it can remove values or keep them:</p>\n<pre><code class=\"language-js\">[null, null, null, null, null]\n                   ^Read @ 3\n                   ^Write @ 3\n</code></pre>\n<p>Now we write the values <code>d</code>, <code>e</code>, and <code>f</code> to the queue. Once the write reaches the end of the array it loops back to the beginning:</p>\n<pre><code class=\"language-js\">[f, null, null, d, e]\n                ^Read @ 3\n    ^Write @ 1\n</code></pre>\n<p>This approach requires a constant amount of memory but allows files of a much larger size to be processed.</p>\n</section>",
  "boilerplate": "class CircularQueue {\n  constructor(size) {\n\n    this.queue = [];\n    this.read = 0;\n    this.write = 0;\n    this.max = size - 1;\n\n    while (size > 0) {\n      this.queue.push(null);\n      size--;\n    }\n  }\n\n  print() {\n    return this.queue;\n  }\n\n  enqueue(item) {\n    // Only change code below this line\n\n    // Only change code above this line\n  }\n\n  dequeue() {\n    // Only change code below this line\n\n    // Only change code above this line\n  }\n}",
  "url": "https://www.freecodecamp.org/learn/coding-interview-prep/data-structures/create-a-circular-queue"
}