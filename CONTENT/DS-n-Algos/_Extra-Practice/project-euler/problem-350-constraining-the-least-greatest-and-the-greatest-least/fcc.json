{
  "title": "Problem 350: Constraining the least greatest and the greatest least",
  "htmlDescription": "<section id=\"description\">\n<p>A list of size n is a sequence of n natural numbers. Examples are (2,4,6), (2,6,4), (10,6,15,6), and (11).</p>\n<p>The greatest common divisor, or gcd, of a list is the largest natural number that divides all entries of the list. Examples: gcd(2,6,4) = 2, gcd(10,6,15,6) = 1 and gcd(11) = 11.</p>\n<p>The least common multiple, or lcm, of a list is the smallest natural number divisible by each entry of the list. Examples: lcm(2,6,4) = 12, lcm(10,6,15,6) = 30 and lcm(11) = 11.</p>\n<p>Let f(G, L, N) be the number of lists of size N with gcd ≥ G and lcm ≤ L. For example:</p>\n<p>f(10, 100, 1) = 91. f(10, 100, 2) = 327. f(10, 100, 3) = 1135. f(10, 100, 1000) mod 1014 = 3286053.</p>\n<p>Find f(106, 1012, 1018) mod 1014.</p>\n</section>",
  "boilerplate": "function euler350() {\n\n  return true;\n}\n\neuler350();",
  "url": "https://www.freecodecamp.org/learn/coding-interview-prep/project-euler/problem-350-constraining-the-least-greatest-and-the-greatest-least"
}