{
  "title": "Problem 106: Special subset sums: meta-testing",
  "htmlDescription": "<section id=\"description\">\n<p>Let S(A) represent the sum of elements in set A of size n. We shall call it a special sum set if for any two non-empty disjoint subsets, B and C, the following properties are true:</p>\n<p>S(B) â‰  S(C); that is, sums of subsets cannot be equal.</p>\n<p>If B contains more elements than C then S(B) > S(C).</p>\n<p>For this problem we shall assume that a given set contains n strictly increasing elements and it already satisfies the second rule.</p>\n<p>Surprisingly, out of the 25 possible subset pairs that can be obtained from a set for which n = 4, only 1 of these pairs need to be tested for equality (first rule). Similarly, when n = 7, only 70 out of the 966 subset pairs need to be tested.</p>\n<p>For n = 12, how many of the 261625 subset pairs that can be obtained need to be tested for equality?</p>\n<p>NOTE: This problem is related to Problem 103 and Problem 105.</p>\n</section>",
  "boilerplate": "function euler106() {\n\n  return true;\n}\n\neuler106();",
  "url": "https://www.freecodecamp.org/learn/coding-interview-prep/project-euler/problem-106-special-subset-sums-meta-testing"
}