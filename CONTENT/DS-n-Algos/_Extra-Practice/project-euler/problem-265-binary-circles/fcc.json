{
  "title": "Problem 265: Binary Circles",
  "htmlDescription": "<section id=\"description\">\n<p>2N binary digits can be placed in a circle so that all the N-digit clockwise subsequences are distinct.</p>\n<p>For N=3, two such circular arrangements are possible, ignoring rotations:</p>\n<p>For the first arrangement, the 3-digit subsequences, in clockwise order, are: 000, 001, 010, 101, 011, 111, 110 and 100.</p>\n<p>Each circular arrangement can be encoded as a number by concatenating the binary digits starting with the subsequence of all zeros as the most significant bits and proceeding clockwise. The two arrangements for N=3 are thus represented as 23 and 29: 00010111 2 = 23 00011101 2 = 29</p>\n<p>Calling S(N) the sum of the unique numeric representations, we can see that S(3) = 23 + 29 = 52.</p>\n<p>Find S(5).</p>\n</section>",
  "boilerplate": "function euler265() {\n\n  return true;\n}\n\neuler265();",
  "url": "https://www.freecodecamp.org/learn/coding-interview-prep/project-euler/problem-265-binary-circles"
}