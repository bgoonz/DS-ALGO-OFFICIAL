{
  "title": "Problem 238: Infinite string tour",
  "htmlDescription": "<section id=\"description\">\n<p>Create a sequence of numbers using the \"Blum Blum Shub\" pseudo-random number generator:</p>\n<p>s0 = 14025256 sn+1 = sn2 mod 20300713</p>\n<p>Concatenate these numbers s0s1s2… to create a string w of infinite length. Then, w = 14025256741014958470038053646…</p>\n<p>For a positive integer k, if no substring of w exists with a sum of digits equal to k, p(k) is defined to be zero. If at least one substring of w exists with a sum of digits equal to k, we define p(k) = z, where z is the starting position of the earliest such substring.</p>\n<p>For instance:</p>\n<p>The substrings 1, 14, 1402, … with respective sums of digits equal to 1, 5, 7, … start at position 1, hence p(1) = p(5) = p(7) = … = 1.</p>\n<p>The substrings 4, 402, 4025, … with respective sums of digits equal to 4, 6, 11, … start at position 2, hence p(4) = p(6) = p(11) = … = 2.</p>\n<p>The substrings 02, 0252, … with respective sums of digits equal to 2, 9, … start at position 3, hence p(2) = p(9) = … = 3.</p>\n<p>Note that substring 025 starting at position 3, has a sum of digits equal to 7, but there was an earlier substring (starting at position 1) with a sum of digits equal to 7, so p(7) = 1, not 3.</p>\n<p>We can verify that, for 0 &#x3C; k ≤ 103, ∑ p(k) = 4742.</p>\n<p>Find ∑ p(k), for 0 &#x3C; k ≤ 2·1015.</p>\n</section>",
  "boilerplate": "function euler238() {\n\n  return true;\n}\n\neuler238();",
  "url": "https://www.freecodecamp.org/learn/coding-interview-prep/project-euler/problem-238-infinite-string-tour"
}