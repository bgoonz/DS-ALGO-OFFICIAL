{
  "title": "Problem 186: Connectedness of a network",
  "htmlDescription": "<section id=\"description\">\n<p>Here are the records from a busy telephone system with one million users:</p>\n<p>RecNrCallerCalled120000710005326001835004393600863701497......... The telephone number of the caller and the called number in record n are Caller(n) = S2n-1 and Called(n) = S2n where S1,2,3,... come from the \"Lagged Fibonacci Generator\":</p>\n<p>For 1 ≤ k ≤ 55, Sk = [100003 - 200003k + 300007k3] (modulo 1000000) For 56 ≤ k, Sk = [Sk-24 + Sk-55] (modulo 1000000)</p>\n<p>If Caller(n) = Called(n) then the user is assumed to have misdialled and the call fails; otherwise the call is successful.</p>\n<p>From the start of the records, we say that any pair of users X and Y are friends if X calls Y or vice-versa. Similarly, X is a friend of a friend of Z if X is a friend of Y and Y is a friend of Z; and so on for longer chains.</p>\n<p>The Prime Minister's phone number is 524287. After how many successful calls, not counting misdials, will 99% of the users (including the PM) be a friend, or a friend of a friend etc., of the Prime Minister?</p>\n</section>",
  "boilerplate": "function euler186() {\n\n  return true;\n}\n\neuler186();",
  "url": "https://www.freecodecamp.org/learn/coding-interview-prep/project-euler/problem-186-connectedness-of-a-network"
}