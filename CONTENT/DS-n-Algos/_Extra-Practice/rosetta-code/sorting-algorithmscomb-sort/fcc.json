{
  "title": "Sorting algorithms/Comb sort",
  "htmlDescription": "<section id=\"description\">\n<p>Implement a <em>comb sort</em>.</p>\n<p>The <strong>Comb Sort</strong> is a variant of the <a href=\"https://rosettacode.org/wiki/Bubble%20Sort\">Bubble Sort</a>.</p>\n<p>Like the <a href=\"https://rosettacode.org/wiki/Shell%20sort\">Shell sort</a>, the Comb Sort increases the gap used in comparisons and exchanges.</p>\n<p>Dividing the gap by $(1-e^{-\\varphi})^{-1} \\approx 1.247330950103979$ works best, but 1.3 may be more practical.</p>\n<p>Some implementations use the insertion sort once the gap is less than a certain amount.</p>\n<p><strong>Also see</strong></p>\n<ul>\n  <li>the Wikipedia article: <a href='https://en.wikipedia.org/wiki/Comb sort' target='_blank'>Comb sort</a>.</li>\n</ul>\n<p>Variants:</p>\n<ul>\n  <li>Combsort11 makes sure the gap ends in (11, 8, 6, 4, 3, 2, 1), which is significantly faster than the other two possible endings.</li>\n  <li>Combsort with different endings changes to a more efficient sort when the data is almost sorted (when the gap is small). Comb sort with a low gap isn't much better than the Bubble Sort.</li>\n</ul>\n<p>Pseudocode:</p>\n<pre><b>function</b> combsort(<b>array</b> input)\n  gap := input<b>.size</b> <i>//initialize gap size</i>\n  <b>loop until</b> gap = 1 <b>and</b> swaps = 0\n    <i>//update the gap value for a next comb. Below is an example</i>\n    gap := int(gap / 1.25)\n    <b>if</b> gap &#x3C; 1 \n      <i>//minimum gap is 1</i>\n      gap := 1\n    <b>end if</b>\n    i := 0\n    swaps := 0 <i>//see <a href='https://rosettacode.org/wiki/Sorting_algorithms/Bubble_sort' target='_blank'>Bubble Sort</a> for an explanation</i>\n    <i>//a single \"comb\" over the input list</i>\n    <b>loop until</b> i + gap >= input<b>.size</b> <i>//see <a href='https://rosettacode.org/wiki/Sorting_algorithms/Shell_sort' target='_blank'>Shell sort</a> for similar idea</i>\n      <b>if</b> input[i] > input[i+gap]\n        <b>swap</b>(input[i], input[i+gap])\n        swaps := 1 <i>// Flag a swap has occurred, so the</i>\n            <i>// list is not guaranteed sorted</i>\n      <b>end if</b>\n      i := i + 1\n    <b>end loop</b>\n  <b>end loop</b>\n<b>end function</b>\n</pre>\n</section>",
  "boilerplate": "function combSort(arr) {\n\n}",
  "url": "https://www.freecodecamp.org/learn/coding-interview-prep/rosetta-code/sorting-algorithmscomb-sort"
}